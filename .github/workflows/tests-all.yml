name: 'Test Formulae'
on:
  workflow_dispatch:
  repository_dispatch:
  schedule:
    - cron: '30 5 * * *'
jobs:
  tests:
    if: "!contains(github.event.head_commit.message, 'skip-test')"
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        php-versions: ['7.1', '7.2', '7.3', '7.4']
        extensions: ['amqp, apcu, grpc, igbinary, imagick, imap, memcache, memcached, msgpack, pecl_http, protobuf, psr, raphf, redis, swoole, xdebug, zmq, pcov, propro']
        include:
          - php-versions: '5.6'
            extensions: amqp, apcu, grpc, igbinary, imagick, imap, memcache, memcached, msgpack, pecl_http, protobuf, psr, raphf, redis, swoole, xdebug, zmq, propro
          - php-versions: '7.0'
            extensions: amqp, apcu, grpc, igbinary, imagick, imap, memcache, memcached, msgpack, pecl_http, protobuf, psr, raphf, redis, swoole, xdebug, zmq, propro
          - php-versions: '8.0'
            extensions: amqp, apcu, grpc, igbinary, imagick, imap, memcache, memcached, msgpack, pecl_http, protobuf, psr, raphf, redis, swoole, xdebug, zmq, pcov
          - php-versions: '8.1'
            extensions: amqp, apcu, grpc, igbinary, imagick, imap, memcache, memcached, msgpack, pecl_http, protobuf, psr, raphf, redis, swoole, xdebug, zmq, pcov
          - php-versions: '7.2'
            extensions: xdebug2
          - php-versions: '7.3'
            extensions: xdebug2
          - php-versions: '7.4'
            extensions: xdebug2
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@develop
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ${{ matrix.extensions }}
      - name: Testing PHP version
        run: |
          php -v
          php -r "if(strpos(phpversion(), '${{ matrix.php-versions }}') === false) {throw new Exception('Wrong PHP version Installed');}"
      - name: Testing Extensions
        if: matrix.extensions != 'xdebug2'
        run: |
          php -m
          php -r "if(substr(phpversion(), 0, 3)<8.0 && ! extension_loaded('propro')) {throw new Exception('propro not found');}"
          php -r "if(phpversion()>=7.1 && ! extension_loaded('pcov')) {throw new Exception('pcov not found');}"
          php -r "if(! extension_loaded('amqp')) {throw new Exception('amqp not found');}"
          php -r "if(! extension_loaded('apcu')) {throw new Exception('apcu not found');}"
          php -r "if(! extension_loaded('grpc')) {throw new Exception('grpc not found');}"
          php -r "if(! extension_loaded('http')) {throw new Exception('http not found');}"
          php -r "if(! extension_loaded('igbinary')) {throw new Exception('igbinary not found');}"
          php -r "if(! extension_loaded('imagick')) {throw new Exception('imagick not found');}"
          php -r "if(! extension_loaded('imap')) {throw new Exception('imap not found');}"
          php -r "if(! extension_loaded('memcache')) {throw new Exception('memcache not found');}"
          php -r "if(! extension_loaded('memcached')) {throw new Exception('memcached not found');}"
          php -r "if(! extension_loaded('msgpack')) {throw new Exception('msgpack not found');}"
          php -r "if(! extension_loaded('protobuf')) {throw new Exception('protobuf not found');}"
          php -r "if(! extension_loaded('raphf')) {throw new Exception('raphf not found');}"
          php -r "if(! extension_loaded('rdkafka')) {throw new Exception('rdkafka not found');}"
          php -r "if(! extension_loaded('redis')) {throw new Exception('redis not found');}"
          php -r "if(! extension_loaded('protobuf')) {throw new Exception('protobuf not found');}"
          php -r "if(! extension_loaded('psr')) {throw new Exception('psr not found');}"
          php -r "if(! extension_loaded('swoole')) {throw new Exception('swoole not found');}"
          php -r "if(! extension_loaded('xdebug')) {throw new Exception('xdebug not found');}"
          php -r "if(! extension_loaded('zmq')) {throw new Exception('zmq not found');}"
      - name: Testing Xdebug2
        if: matrix.extensions == 'xdebug2'
        run: php -r "if(phpversion('xdebug')!='2.9.8') {throw new Exception('xdebug2 not found');}"
