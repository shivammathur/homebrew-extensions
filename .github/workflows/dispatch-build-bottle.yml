name: Dispatch build bottle
on:
  workflow_dispatch:
    inputs:
      runner:
        description: Build runner (macOS version or Linux)
        required: true
      formula:
        description: Formula name
        required: true
      timeout:
        description: "Build timeout (in minutes, default: 60 minutes)"
        default: "60"
        required: true
      issue:
        description: Issue number, where comment on failure would be posted
        required: false
      upload:
        description: Whether to upload built bottles or not
        required: false
env:
  HOMEBREW_DEVELOPER: 1
  HOMEBREW_GITHUB_ACTIONS: 1
  HOMEBREW_NO_AUTO_UPDATE: 1
  HOMEBREW_CHANGE_ARCH_TO_ARM: 1
jobs:
  bottle:
    runs-on: ${{github.event.inputs.runner}}
    timeout-minutes: ${{fromJson(github.event.inputs.timeout)}}
    defaults:
      run:
        shell: /bin/bash -e {0}
    env:
      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      HOMEBREW_GITHUB_API_TOKEN: ${{secrets.GITHUB_TOKEN}}
    steps:
      - name: ${{github.event.inputs.formula}}
        id: print_details
        run: |
          echo sender=${{github.event.sender.login}}
          echo formula=${{github.event.inputs.formula}}
          echo runner=${{github.event.inputs.runner}}
          echo issue=${{github.event.inputs.issue}}
          echo upload=${{github.event.inputs.upload}}

      - name: Set environment variables
        run: |
          if [ "$RUNNER_OS" = 'macOS' ]; then
            echo 'PATH=/opt/homebrew/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin' >> $GITHUB_ENV
            echo 'GITHUB_ACTIONS_HOMEBREW_MACOS_SELF_HOSTED=1' >> $GITHUB_ENV
          else
            # No PATH needed on Linux as set by Docker
            echo 'HOMEBREW_FORCE_HOMEBREW_ON_LINUX=1' >> $GITHUB_ENV
          fi

      - name: Run Docker container
        if: runner.os == 'Linux'
        env:
          TAP_PATH: /home/linuxbrew/.linuxbrew/Homebrew/Library/Taps/shivammathur/homebrew-extensions
        run: |
          docker run \
            --detach \
            --user linuxbrew \
            --name ${{github.sha}} \
            --env-file <(env | egrep 'HOMEBREW|GITHUB') \
            --workdir /tmp/bottles \
            --pull always \
            homebrew/ubuntu20.04:latest \
            sleep inf
          # Fix working directory permissions
          docker exec --user linuxbrew ${{github.sha}} brew tap shivammathur/homebrew-extensions
          docker exec --user root ${{github.sha}} chmod 777 /tmp/bottles
          docker exec --workdir "$TAP_PATH" ${{github.sha}} git remote set-url origin ${{github.event.repository.html_url}}
          docker exec --workdir "$TAP_PATH" ${{github.sha}} git fetch origin ${{github.sha}} '+refs/heads/*:refs/remotes/origin/*'
          docker exec --workdir "$TAP_PATH" ${{github.sha}} git remote set-head origin --auto
          docker exec --workdir "$TAP_PATH" ${{github.sha}} git checkout --force -B master FETCH_HEAD

      - name: Set up Homebrew
        id: set-up-homebrew
        if: runner.os == 'macOS'
        uses: Homebrew/actions/setup-homebrew@master

      - name: Setup Xcode
        if: runner.os == 'macOS'
        run: |
          if [ "${{github.event.inputs.macos}}" = "macos-10.15" ]; then
            sudo xcode-select -s /Applications/Xcode_11.7.app || exit 1
          else
            sudo xcode-select -s /Applications/Xcode_12.5.app || exit 1
          fi

      - if: runner.os == 'macOS'
        run: brew test-bot --only-cleanup-before

      - name: Run brew test-bot --only-setup
        run: |
          if [ "$RUNNER_OS" = 'macOS' ]; then
            brew test-bot --only-setup
          else
            docker exec ${{github.sha}} brew test-bot --only-setup
          fi

      - name: Run brew test-bot --only-formulae --keep-old --only-json-tab --skip-dependents ${{github.event.inputs.formula}}
        run: |
          if [ "$RUNNER_OS" = 'macOS' ]; then
            mkdir bottles
            cd bottles
            brew test-bot --keep-old --only-json-tab --only-formulae --skip-dependents --root-url="https://ghcr.io/v2//${{ github.repository_owner }}/extensions" ${{ github.repository_owner }}/extensions/${{github.event.inputs.formula}}
          else
            docker exec ${{github.sha}} brew test-bot --keep-old --only-json-tab --only-formulae --skip-dependents --root-url="https://ghcr.io/v2//${{ github.repository_owner }}/extensions" ${{ github.repository_owner }}/extensions/${{github.event.inputs.formula}}
          fi

      - name: Copy bottles from container
        if: always() && runner.os == 'Linux'
        run: docker cp ${{github.sha}}:/tmp/bottles .

      - name: Failures summary for brew test-bot --only-formulae
        if: always()
        run: |
          touch bottles/steps_output.txt
          cat bottles/steps_output.txt
          rm bottles/steps_output.txt

      - name: Output brew bottle result
        if: always()
        run: |
          cat bottles/bottle_output.txt
          rm bottles/bottle_output.txt
      - name: Upload logs
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: logs
          path: bottles/logs

      - name: Delete logs and home
        if: always()
        run: |
          rm -rvf bottles/logs
          rm -rvf bottles/home

      - name: Fix bottles json
        run: |
          cd bottles
          if [ "$RUNNER_OS" = 'macOS' ]; then
            LC_ALL=C find . -type f -name '*.json' -exec sed -i '' s~homebrew/bottles-extensions~${{ github.repository_owner }}/extensions~ {} +
            LC_ALL=C find . -type f -name '*.json' -exec sed -i '' s~bottles-extensions~extensions~ {} +
            LC_ALL=C find . -type f -name '*.json' -exec sed -i '' s~bottles~extensions~ {} +
          else
            LC_ALL=C find . -type f -name '*.json' -exec sed -i s~homebrew/bottles-extensions~${{ github.repository_owner }}/extensions~ {} +
            LC_ALL=C find . -type f -name '*.json' -exec sed -i s~bottles-extensions~extensions~ {} +
            LC_ALL=C find . -type f -name '*.json' -exec sed -i s~bottles~extensions~ {} +
          fi

      - name: Count bottles
        id: bottles
        if: always()
        run: |
          cd bottles
          count=$(ls *.json | wc -l | xargs echo -n)
          echo "$count bottles"
          echo "::set-output name=count::$count"

      - name: Upload bottles to GitHub Actions
        if: always() && steps.bottles.outputs.count > 0
        uses: actions/upload-artifact@main
        with:
          name: bottles
          path: bottles

      - run: brew test-bot --only-cleanup-after
        if: always()

      - name: Post Cleanup
        if: always()
        run: |
          if [ "$RUNNER_OS" = 'Linux' ]; then
            docker rm -f ${{github.sha}}
          else
            brew test-bot --only-cleanup-after
          fi
          rm -rvf bottles
          if [ -L "$GITHUB_WORKSPACE" ]; then
            sudo rm -rf "$GITHUB_WORKSPACE"
          fi

      - name: Post comment on failure
        if: ${{!success() && github.event.inputs.issue > 0}}
        uses: Homebrew/actions/post-comment@master
        with:
          token: ${{secrets.HOMEBREW_GITHUB_API_TOKEN}}
          issue: ${{github.event.inputs.issue}}
          body: ':x: @${{github.actor}} bottle request for ${{github.event.inputs.formula}} [failed](${{github.event.repository.html_url}}/actions/runs/${{github.run_id}}).'
          bot_body: ':x: Bottle request for ${{github.event.inputs.formula}} [failed](${{github.event.repository.html_url}}/actions/runs/${{github.run_id}}).'
          bot: BrewTestBot
  upload:
    runs-on: ubuntu-latest
    needs: bottle
    if: github.event.inputs.upload
    env:
      HOMEBREW_FORCE_HOMEBREW_ON_LINUX: 1
    steps:
      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Download bottles from GitHub Actions
        uses: actions/download-artifact@main
        with:
          name: bottles
          path: ~/bottles/

      # Workaround until the `cache` action uses the changes from
      # https://github.com/actions/toolkit/pull/580.
      - name: Unlink workspace
        run: |
          mv "${GITHUB_WORKSPACE}" "${GITHUB_WORKSPACE}-link"
          mkdir "${GITHUB_WORKSPACE}"

      - name: Cache gems
        uses: actions/cache@v2
        with:
          path: ${{steps.set-up-homebrew.outputs.gems-path}}
          key: ${{runner.os}}-rubygems-v2-${{steps.set-up-homebrew.outputs.gems-hash}}
          restore-keys: ${{runner.os}}-rubygems-v2-

      # Workaround until the `cache` action uses the changes from
      # https://github.com/actions/toolkit/pull/580.
      - name: Re-link workspace
        run: |
          rmdir "${GITHUB_WORKSPACE}"
          mv "${GITHUB_WORKSPACE}-link" "${GITHUB_WORKSPACE}"

      - name: Install gems
        run: brew install-bundler-gems

      - name: Setup git
        run: |
          git config --local user.email 1589480+BrewTestBot@users.noreply.github.com
          git config --local user.name BrewTestBot

      - name: Upload bottles to GitHub Packages
        env:
          HOMEBREW_GITHUB_PACKAGES_USER: ${{ github.repository_owner }}
          HOMEBREW_GITHUB_PACKAGES_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          cd ~/bottles
          brew pr-upload --verbose --keep-old --github-org=${{ github.repository_owner }} --root-url="https://ghcr.io/v2/${{ github.repository_owner }}/extensions"

      - name: Push commits
        uses: Homebrew/actions/git-try-push@master
        with:
          token: ${{secrets.GITHUB_TOKEN}}

      - name: Post comment on failure
        if: ${{!success() && github.event.inputs.issue > 0}}
        uses: Homebrew/actions/post-comment@master
        with:
          token: ${{secrets.HOMEBREW_GITHUB_API_TOKEN}}
          issue: ${{github.event.inputs.issue}}
          body: ':x: @${{github.actor}} bottle request for ${{github.event.inputs.formula}} [failed](${{github.event.repository.html_url}}/actions/runs/${{github.run_id}}).'
          bot_body: ':x: Bottle request for ${{github.event.inputs.formula}} [failed](${{github.event.repository.html_url}}/actions/runs/${{github.run_id}}).'
          bot: BrewTestBot
