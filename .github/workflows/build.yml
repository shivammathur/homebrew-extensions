name: Update and Build Formulae
on:
  push:
    branches: master
  schedule:
    - cron: '0 4 * * 4'
  repository_dispatch:
  workflow_dispatch:
  pull_request:
env:
  HOMEBREW_DEVELOPER: 1
  HOMEBREW_GITHUB_ACTIONS: 1
  HOMEBREW_NO_AUTO_UPDATE: 1
jobs:
  tap-syntax:
    if: "!contains(github.event.head_commit.message, 'skip-build')"
    runs-on: ubuntu-latest
    env:
      HOMEBREW_FORCE_HOMEBREW_ON_LINUX: 1
    steps:
      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Cache Bundler RubyGems
        uses: actions/cache@v1
        with:
          path: ${{ steps.set-up-homebrew.outputs.gems-path }}
          key: ${{ runner.os }}-rubygems-${{ steps.set-up-homebrew.outputs.gems-hash }}
          restore-keys: ${{ runner.os }}-rubygems-

      - name: Install Bundler RubyGems
        run: brew install-bundler-gems

      - run: brew test-bot --only-tap-syntax

  get-matrix:
    if: github.event_name != 'pull_request' && !contains(github.event.head_commit.message, 'skip-build')
    needs: tap-syntax
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get matrix
        id: set-matrix
        env:
          GITHUB_MESSAGE: ${{ github.event.head_commit.message }}
        run: |
           json_array=()
           if [[ "$GITHUB_MESSAGE" != *--build-only-* ]]; then
             mapfile -t extensions < <(find ./Formula -name "*.rb" -print0 | xargs -0 basename -a | sed "s/@.*//" | sort | uniq)
           else
             IFS=, read -a extensions <<< $(echo "$GITHUB_MESSAGE" | grep -Po 'build-only-.*' | cut -d '-' -f 3-)
           fi
           for extension in ${extensions[@]}; do
             for formula in ./Formula/$extension@*.rb; do
               json_array+=("{\"php\": \"$(echo $formula | grep -Eo '[0-9]+\.[0-9]+')\", \"extension\": \"$extension\"}")
             done
           done
           echo "::set-output name=matrix::{\"include\":[$(echo ${json_array[@]} | sed -e 's|} {|}, {|g')]}"

  create-pr:
    if: github.event_name != 'pull_request' && !contains(github.event.head_commit.message, 'skip-build')
    needs: get-matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.get-matrix.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v2

      - name: Patch formula
        env:
          GITHUB_MESSAGE: ${{ github.event.head_commit.message }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          EXTENSION: ${{ matrix.extension }}
          VERSION: ${{ matrix.extension }}@${{ matrix.php }}
        run: bash ./.github/scripts/edit.sh

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.HOMEBREW_GITHUB_API_TOKEN }}
          commit-message: Update ${{ matrix.extension }}@${{ matrix.php }}
          committer: BrewTestBot <1589480+BrewTestBot@users.noreply.github.com>
          author: BrewTestBot <1589480+BrewTestBot@users.noreply.github.com>
          signoff: false
          base: master
          branch: update-${{ matrix.extension }}@${{ matrix.php }}
          branch-suffix: short-commit-hash
          delete-branch: true
          title: 'Update ${{ matrix.extension }}@${{ matrix.php }}'
          body: |
            Build ${{ matrix.extension }}@${{ matrix.php }}
          labels: ${{ matrix.extension }}@${{ matrix.php }},automated-pr
          assignees: ${{ github.repository_owner }}
          team-reviewers: |
            owners
            maintainers
          draft: false

      - name: Check outputs
        run: |
          echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
          echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"

  build-formula:
    needs: tap-syntax
    if: github.event_name == 'pull_request' && !contains(github.event.head_commit.message, 'skip-build')
    strategy:
      matrix:
        os: ['macos-11.0-m1', 'macos-11.0', 'macos-10.15']
      fail-fast: false
    runs-on: ${{ matrix.os }}
    timeout-minutes: 300
    env:
      PATH: '/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/homebrew/bin'
      HOMEBREW_DEVELOPER: 1
      HOMEBREW_CHANGE_ARCH_TO_ARM: 1
      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
    steps:
      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Setup Xcode
        run: |
          if [ "${{ matrix.os }}" = "macos-10.15" ]; then
            sudo xcode-select -s /Applications/Xcode_11.7.app || exit 1
          else
            sudo xcode-select -s /Applications/Xcode_12.5.app || exit 1
          fi

      - name: brew test-bot --only-cleanup-before
        run: brew test-bot --only-cleanup-before

      - name: brew test-bot --only-setup
        run: brew test-bot --only-setup

      - name: Run brew test-bot --only-formulae
        run: |
          mkdir bottles
          cd bottles
          brew test-bot --only-formulae --root-url="https://ghcr.io/v2/${{ github.repository_owner }}/extensions"

      - name: Output brew test-bot --only-formulae failures
        if: always()
        run: |
          cat bottles/steps_output.txt
          rm bottles/steps_output.txt

      - name: Upload logs
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: logs (${{ matrix.os }})
          path: bottles/logs

      - name: Delete logs and home
        if: always()
        run: |
          rm -rvf bottles/logs
          rm -rvf bottles/home

      - name: Count bottles
        id: bottles
        if: always()
        run: |
          cd bottles
          LC_ALL=C find . -type f -name '*.json' -exec sed -i '' s~homebrew/bottles-extensions~${{ github.repository_owner }}/extensions~ {} +
          LC_ALL=C find . -type f -name '*.json' -exec sed -i '' s~bottles-extensions~extensions~ {} +
          LC_ALL=C find . -type f -name '*.json' -exec sed -i '' s~bottles~extensions~ {} +
          count=$(ls *.json | wc -l | xargs echo -n)
          echo "$count bottles"
          echo "::set-output name=count::$count"

      - name: Upload failed bottles
        if: always() && steps.bottles.outputs.failures > 0
        uses: actions/upload-artifact@main
        with:
          name: bottles (${{ matrix.version }})
          path: bottles/failed

      # Must be run before the `Upload bottles` step so that failed
      # bottles are not included in the `bottles` artifact.
      - name: Delete failed bottles
        if: always()
        run: rm -rvf bottles/failed

      - name: Upload bottles
        if: always() && steps.bottles.outputs.count > 0
        uses: actions/upload-artifact@main
        with:
          name: bottles
          path: bottles

      - run: brew test-bot --only-cleanup-after
        if: always()

      - name: Post Cleanup
        if: always()
        run: |
          rm -rvf bottles
          if [ -L "$GITHUB_WORKSPACE" ]; then
            sudo rm -rf "$GITHUB_WORKSPACE"
          fi

  add-label:
    needs: build-formula
    if: github.event_name == 'pull_request' && !contains(github.event.head_commit.message, 'skip-build') && github.event.pull_request.user.login == github.repository_owner
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Add Label
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh pr edit "$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')" --add-label "build-complete"
